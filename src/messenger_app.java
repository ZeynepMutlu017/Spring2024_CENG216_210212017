

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author ZEYNEP
 */
public class messenger_app extends javax.swing.JFrame {
    
    
    public static String status = "";   
    static String person = "";
    public static String user_name = "";
    static int port_number = 0;
    static String Ip_address = "";
    public static ServerSocket server_socket = null;
    public static Socket socket = null;
    public  static DataOutputStream out;
    public  static DataInputStream in;

    /**
     * Creates new form messenger_app
     */
    public messenger_app() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        name_label = new javax.swing.JLabel();
        ip_label = new javax.swing.JLabel();
        port_label = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        connect_button = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        messagebox1 = new javax.swing.JTextArea();
        send_button = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        messagebox2 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Private Messenger");
        setBackground(new java.awt.Color(0, 102, 102));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        name_label.setBackground(new java.awt.Color(255, 127, 0));
        name_label.setText("                     Name:");

        ip_label.setBackground(new java.awt.Color(153, 0, 0));
        ip_label.setText("IP:");

        port_label.setText("       Port Number:");

        jTextField1.setBackground(new java.awt.Color(204, 0, 51));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setBackground(new java.awt.Color(204, 0, 51));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField3.setBackground(new java.awt.Color(204, 0, 51));
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        connect_button.setBackground(new java.awt.Color(204, 0, 51));
        connect_button.setText("Connect");
        connect_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connect_buttonActionPerformed(evt);
            }
        });

        jRadioButton1.setBackground(new java.awt.Color(204, 0, 51));
        jRadioButton1.setText("Client");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setBackground(new java.awt.Color(204, 0, 51));
        jRadioButton2.setText("Host");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        messagebox1.setColumns(20);
        messagebox1.setRows(5);
        jScrollPane1.setViewportView(messagebox1);

        send_button.setBackground(new java.awt.Color(204, 0, 51));
        send_button.setText("send");
        send_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                send_buttonActionPerformed(evt);
            }
        });

        messagebox2.setColumns(20);
        messagebox2.setRows(5);
        jScrollPane2.setViewportView(messagebox2);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("PRIVATE MESSENGER APP");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(193, 193, 193)
                .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(connect_button, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(229, 229, 229))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(name_label)
                        .addGap(26, 26, 26)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98)
                        .addComponent(ip_label)
                        .addGap(46, 46, 46)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(port_label)
                        .addGap(36, 36, 36)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(329, 329, 329)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(392, 392, 392)
                        .addComponent(send_button, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name_label, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ip_label, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(port_label, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(connect_button, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(send_button, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void connect_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connect_buttonActionPerformed
        if (jRadioButton2.isSelected())                   
        {
           new Thread(new Runnable()
           {
               public void run()
               {   

                    user_name = jTextField1.getText();
                    port_number = Integer.parseInt(jTextField3.getText());                       
                    Ip_address = jTextField2.getText();
                    try {
                       server_socket = new ServerSocket(port_number);
                   } catch (IOException ex) {
                       Logger.getLogger(messenger_app.class.getName()).log(Level.SEVERE, null, ex);
                   }
                       
                   try {
                       socket = server_socket.accept();
                   } catch (IOException ex) {
                       Logger.getLogger(messenger_app.class.getName()).log(Level.SEVERE, null, ex);
                   }
                        status = "Connected";
                        
                   try {
                       out = new DataOutputStream(socket.getOutputStream());
                   } catch (IOException ex) {
                       Logger.getLogger(messenger_app.class.getName()).log(Level.SEVERE, null, ex);
                   }
                   try {
                       out.writeUTF(user_name);
                   } catch (IOException ex) {
                       Logger.getLogger(messenger_app.class.getName()).log(Level.SEVERE, null, ex);
                   }
                   try {
                       in = new DataInputStream(socket.getInputStream());
                   } catch (IOException ex) {
                       Logger.getLogger(messenger_app.class.getName()).log(Level.SEVERE, null, ex);
                   }
                   try {
                       person = in.readUTF();
                   } catch (IOException ex) {
                       Logger.getLogger(messenger_app.class.getName()).log(Level.SEVERE, null, ex);
                   }

                    
                    new Thread(new Runnable()
                    {
                        public void run()
                        {  
                                
                            while(true)
                                
                                {   
                                    String message = null;
                                     
                                    try {
                                        message =in.readUTF();
                                    } catch (IOException ex) {
                                        Logger.getLogger(messenger_app.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                     
                                         
                                         messagebox1.setEditable(true);
                                        
                                         messagebox1.append(person+": "+message+"\n");
                                         messagebox1.setEditable(false);
                                }

                        }
                            
                    }).start();
               }
           }).start();

        }
        if (jRadioButton1.isSelected())
        {
            new Thread(new Runnable()
            {
                public void run()
                {

                    Ip_address = jTextField2.getText();
                    port_number = Integer.parseInt(jTextField3.getText());
                    try {
                        socket = new Socket(Ip_address,port_number);
                    } catch (IOException ex) {
                        Logger.getLogger(messenger_app.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    status = "Connected";
                    user_name = jTextField1.getText();

                    try {
                        in = new DataInputStream(socket.getInputStream());
                    } catch (IOException ex) {
                        Logger.getLogger(messenger_app.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        person = in.readUTF();
                    } catch (IOException ex) {
                        Logger.getLogger(messenger_app.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        out = new DataOutputStream(socket.getOutputStream());
                    } catch (IOException ex) {
                        Logger.getLogger(messenger_app.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        out.writeUTF(user_name);
                    } catch (IOException ex) {
                        Logger.getLogger(messenger_app.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    
                    String message;

                    new Thread(new Runnable()
                    {
                        public void run()
                        {

                            while(true)

                            {
                                String message = null;
                                try {
                                    message =in.readUTF();
                                } catch (IOException ex) {
                                    Logger.getLogger(messenger_app.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                messagebox1.setEditable(true);

                                messagebox1.append(person+": "+message+"\n");
                                messagebox1.setEditable(false);
                            }


                        }

                    }).start();

       


                }
            }).start();
        }

    }//GEN-LAST:event_connect_buttonActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void send_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_send_buttonActionPerformed

    }//GEN-LAST:event_send_buttonActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed
   
    
    /**
     * @param args the command line arguments
     *
     *
     */
    public static void main(String args[]) {
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(messenger_app.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(messenger_app.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(messenger_app.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(messenger_app.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        

        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new messenger_app().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connect_button;
    private javax.swing.JLabel ip_label;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextArea messagebox1;
    private javax.swing.JTextArea messagebox2;
    private javax.swing.JLabel name_label;
    private javax.swing.JLabel port_label;
    private javax.swing.JButton send_button;
    // End of variables declaration//GEN-END:variables
}
